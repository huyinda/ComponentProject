apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersions
    buildToolsVersion rootProject.ext.buildToolsVersions


    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersions
        targetSdkVersion rootProject.ext.targetSdkVersions
        versionCode rootProject.ext.versionCodes
        versionName rootProject.ext.versionNames

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        //ARouter添加
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.ext.constraintlayoutVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.ext.espressoCoreVersion"

    // 替换成最新版本, 需要注意的是api
    // 要与compiler匹配使用，均使用最新版可以保证兼容
    api "com.alibaba:arouter-api:$rootProject.ext.arouterApiVersion"
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.ext.arouterCompilerVersion"

    api 'com.squareup.retrofit2:converter-gson:2.3.0'
}
